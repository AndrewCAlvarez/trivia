import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import { GetServerSideProps } from "next";
import { randomizeQuestions } from "../lib/question";
import { useState } from "react";
import Questions from "@/components/Questions/Questions";

const inter = Inter({ subsets: ["latin"] });

export default function Home({ preGenQuestions }: { preGenQuestions: any }) {
  const [questions, setquestions] = useState(preGenQuestions);
  const [difficulty, setDifficulty] = useState("easy");

  function handleChangeDifficulty(event: any) {
    setDifficulty(event.target.value);
  }

  async function handleGenerateQuestions() {
    let questions = await fetch(
      `https://the-trivia-api.com/api/questions?limit=5&difficulty=${difficulty}`
    )
      .then((response) => response.json())
      .then((data) => data);
    questions = randomizeQuestions(questions);
    setquestions(questions);
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <h1>TRIVIA!</h1>
        <select value={difficulty} onChange={handleChangeDifficulty}>
          <option value="easy">easy</option>
          <option value="medium">medium</option>
          <option value="hard">hard</option>
        </select>
        <button onClick={handleGenerateQuestions}>New Questions</button>

        <Questions questions={questions}></Questions>
        <button onClick={handleGenerateQuestions}>Play Again!</button>
      </main>
    </>
  );
}

export const getServerSideProps: GetServerSideProps = async (context) => {
  //...
  const preGenQuestions = await fetch(
    "https://the-trivia-api.com/api/questions?limit=5"
  )
    .then((response) => response.json())
    .then((data) => data);
  preGenQuestions.randomizedAnswers = randomizeQuestions(preGenQuestions);

  return { props: { preGenQuestions } };
};
